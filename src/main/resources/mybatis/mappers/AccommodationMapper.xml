<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="kr.co.airbnb.mapper.AccommodationMapper">
	<resultMap type="Accommodation" id="AccResultMap">
		<id column="ACC_NO" property="accNo"/>
		<result column="TYPE_NO" property="typeNo"/>
		<result column="ACC_REVIEW_COUNT" property="reviewCount"/>
		<result column="ACC_REVIEW_SCORE" property="reviewScore"/>
		<result column="ACC_NAME" property="name"/>
		<result column="ACC_DESCRIPTION" property="description"/>
		<result column="ACC_address" property="address"/>
		<result column="ACC_LATITUDE" property="latitude"/>
		<result column="ACC_LONGITUDE" property="longitude"/>
		<result column="ACC_PRICE" property="price"/>
		<result column="ACC_GUEST" property="guest"/>
		<result column="ACC_PET" property="pet"/>
		<result column="ACC_CHECK_IN" property="checkIn"/>
		<result column="ACC_CHECK_OUT" property="checkOut"/>
		<result column="ACC_CHECK_IN_TYPE" property="checkInType"/>
		<result column="ACC_STATUS" property="status"/>
		<result column="ACC_CREATED_DATE" property="createdDate"/>
		<result column="ACC_UPDATED_DATE" property="updatedDate"/>
		<result column="ACC_VIEW_COUNT" property="viewCount"/>
		<result column="ACC_MIN_DAY" property="minDay"/>
		<result column="ACC_MAX_DAY" property="maxDay"/>
		<result column="ACC_RENT" property="rent"/>
		<result column="ACC_TRAFFIC_DESCRIPTION" property="trafficDescription"/>
		<result column="ACC_REFOUND_DESCRIPTION" property="refoundDescription"/>
		<result column="ACC_CLEANING_PRICE" property="cleaningPrice"/>
		<result column="IMAGE_COVER" property="imageCover"/>
		<result column="AVG_CLEANLINESS" property="cleanScore"/>
		<result column="AVG_ACCURACY" property="accuracyScore"/>
		<result column="AVG_COMMUNICATION" property="communicationScore"/>
		<result column="AVG_LOCATION" property="locationScore"/>
		<result column="AVG_CHECKIN" property="checkinScore"/>
		<result column="AVG_VALUE" property="valueScore"/>
		<result column="AVG_CONVENIENCE" property="convenienceScore"/>
		<result column="AVG_TOTAL" property="totalScore"/>
		
		<association property="user" column="USER_NO" select="kr.co.airbnb.mapper.UserMapper.getUserByNo"/>
	</resultMap>
	
	<!-- List<AccConvenience> getAccConveniencesByAccNo(int accNo); -->
	<select id="getAccConveniencesByAccNo" parameterType="int" resultType="AccConvenience">
		select A.ACC_NO as accNo, 
			   A.CONVENIENCE_NO as "convenience.no",
			   B.CONVENIENCE_NAME as "convenience.name",	       
			   B.CONVENIENCE_ICON_NAME as "convenience.iconName",		       
			   B.CONVENIENCE_TYPE as "convenience.type"		       
		from AIRBNB_ACC_CONVENIENCES A, AIRBNB_CONVENIENCES B
		where A.ACC_NO = #{value}
		and A.CONVENIENCE_NO = B.CONVENIENCE_NO
	</select>
	
	<select id="getAccPhotosByAccNo" parameterType="int" resultType="AccPhoto">
		select 	ROWNUM as num, 
				A.IMAGE_NO as imageNo,
				A.ACC_NO as accNo,
				A.IMAGE_NAME as name,
				A.IMAGE_DESCRIPTION as description,
				A.IMAGE_COVER as cover
 		from
 		(
 			select 
        	A.*
   			FROM AIRBNB_ACC_PHOTOS A
  			where acc_no = #{value}
    		ORDER BY CASE WHEN A.IMAGE_COVER = 'Y' THEN 1 ELSE 2 END,
        	A.image_no ASC
		) A
	</select>
	
	<!-- List<AccType> getAccTypesByTypeNo(int typeNo); -->
	<select id="getAccTypesByTypeNo" parameterType="int" resultType="AccType">
		select A.acc_no 			as accNo,
        	   B.type_no 			as "type.no",
        	   B.type_name 			as "type.name", 
        	   B.type_description 	as "type.description", 
        	   B.main_type 			as "type.maintype", 
        	   B.image_name 		as "type.imageName"
		from airbnb_accommodations A, airbnb_acc_types B
		where A.type_no = B.type_no
		and   A.type_no = #{value}
	</select>
	
	<!-- List<AccRoom> getAccRoomsByAccNo(int accNo); 
	<select id="getAccRoomsByAccNo" parameterType="int" resultType="AccRoom">
		select A.acc_no as accNo, 
			   B.room_bathroom as "room.bathroom", 
			   B.room_bed as "room.bed", 
			   B.room_bedroom as "room.bedroom", 
			   B.room_livingroom as "room.livingroom", 
			   B.room_no as "room.no", 
			   B.room_toilet as "room.toilet"
		from airbnb_accommodations A, airbnb_acc_rooms B
		where A.acc_no = B.acc_no
		and A.acc_no = #{value}
	</select> -->
	
	
	<!-- List<Wishlist> getWishlistByAccNo(int accNo); 
	<select id="getWishlistByAccNo" parameterType="int" resultType="Wishlist">
		select A.acc_no as accNo, B.wishlist_no as "wishlist.no"
		from airbnb_accommodations A, airbnb_wishlist_accommodations B
		where A.acc_no = B.acc_no
		and A.acc_no = #{value}
	</select>-->
	
	<!-- List<AccViewCount> getViewCountsByAccNo(int accNo); -->
	
	<!-- List<Reservation> getReservationByAccNo(int accNo); -->
	
	<!-- List<Review> getReviewByAccNo(int accNo); -->
	
	
	<!-- List<AccDiscount> getDiscountByAccNo(int accNo); -->
	
	<!-- List<Tag> getTagByAccNo(int accNo); -->


	<!-- List<Room> getRoomByAccNo(int accNo); -->
	<select id="getRoomByAccNo" parameterType="int" resultType="room">
		select
			ROOM_NO as no,
			ACC_NO as accNo,
			ROOM_BEDROOM as bedroom,
			ROOM_BED as bed,
			ROOM_BATHROOM as bathroom,
			ROOM_TOILET as toilet,
			ROOM_LIVINGROOM as livingroom
		from AIRBNB_ACC_ROOMS
		where acc_no = #{value}
	
	</select>
	
	<resultMap type="Accommodation" id="AccDetailResultMap" extends="AccResultMap">
		<collection property="conveniences" column="ACC_NO" select="kr.co.airbnb.mapper.AccommodationMapper.getAccConveniencesByAccNo"></collection>
   		<collection property="photos" column="ACC_NO" select="kr.co.airbnb.mapper.AccommodationMapper.getAccPhotosByAccNo"></collection>
   		<collection property="rooms" column="ACC_NO" select="kr.co.airbnb.mapper.AccommodationMapper.getRoomByAccNo"></collection>
      <collection property="type" column="TYPE_NO" select="kr.co.airbnb.mapper.AccommodationMapper.getAccTypesByTypeNo"></collection>
		<!--
		<collection property="room" column="ACC_NO" select="kr.co.airbnb.mapper.AccommodationMapper.getAccRoomsByAccNo"></collection>
		<collection property="wishlist" column="ACC_NO" select="kr.co.airbnb.mapper.AccommodationMapper.getWishlistByAccNo"></collection>
		<collection property="view" column="ACC_NO" select=""></collection>
		<collection property="reservation" column="ACC_NO" select=""></collection>
		<collection property="review" column="ACC_NO" select=""></collection>
		<collection property="discount" column="ACC_NO" select=""></collection>
		<collection property="tag" column="ACC_NO" select=""></collection> -->
	</resultMap>
	
	<!-- Accommodation getAccommodation(int no); -->
	<select id="getAcc" parameterType="int" resultMap="AccDetailResultMap">
		select *
		from AIRBNB_ACCOMMODATIONS
		where acc_no = #{value}
	</select>
	

	<!-- List<Accommodation> getAllAcc(); -->
	<select id="getAllAcc" resultMap="AccDetailResultMap">
		select acc.acc_no, acc.acc_name, acc.acc_price, acc.image_cover,
			   accUser.user_name as "user.name",
			   acctype.type_name as "type.name"
			   <!-- , room.room_bed as "room.bed" -->
		from airbnb_accommodations acc,
		     airbnb_users accUser,
		     airbnb_acc_types accType
		     <!-- airbnb_acc_photos photo,
		     airbnb_acc_rooms room,
		     airbnb_reviews review,
		     airbnb_acc_discounts discount -->
		where acc.acc_status = '운영중' 
		  and acc.user_no = accUser.user_no
		  and acc.type_no = accType.type_no
		  <!-- and acc.acc_no = convenience.acc_no
		  and acc.acc_no = room.acc_no
		  and acc.acc_no = photo.acc_no
		  and acc.acc_no = accView.acc_no
		  and acc.acc_no = reservation.acc_no
		  and acc.acc_no = review.acc_no
		  and acc.acc_no = wishlist.acc_no
		  and acc.acc_no = discount.acc_no
		  and acc.acc_no = accTag.acc_no -->
	</select>


	<!-- List<AccConvenience2> getCon(int accNo); -->
	<select id="getBoast" parameterType="int" resultType="Boast">
		select 
			 ACC_NO as accNo,
			 CONVENIENCE_NO as conNo
		from AIRBNB_ACC_CONVENIENCES
		where acc_no = #{value}
	</select>
	

	<!-- void updateReview(Accommodation accommodation) -->
	<update id="updateAvgScore" parameterType="kr.co.airbnb.vo.Accommodation">
		update AIRBNB_ACCOMMODATIONS
	    set
	    	ACC_REVIEW_COUNT = ACC_REVIEW_COUNT + 1,
	    	ACC_REVIEW_SCORE = #{reviewScore},
	    	AVG_TOTAL = #{totalScore},
	    	AVG_CLEANLINESS = #{cleanScore},
			AVG_ACCURACY = #{accuracyScore},
			AVG_COMMUNICATION = #{communicationScore},
			AVG_LOCATION = #{locationScore},
			AVG_CHECKIN = #{checkinScore},
			AVG_VALUE = #{valueScore},
			AVG_CONVENIENCE = #{convenienceScore}
		where acc_no = #{accNo}
	</update>
	
	<!-- // 번호만 가지고 있는 숙소 데이터 생성(insert into) -->
	<!-- void insertAcc(Accommodation acc); -->	
	<insert id="insertAcc" parameterType="Accommodation">
		<selectKey keyProperty="accNo" resultType="int" order="BEFORE">
			select Accommodations_seq.nextval
			from dual
		</selectKey>
		insert into airbnb_accommodations
		(acc_no, user_no)
		values
		(#{accNo}, #{user.no})
	</insert>
	
</mapper>