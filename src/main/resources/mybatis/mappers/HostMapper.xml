<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="kr.co.airbnb.mapper.HostMapper">

<!-- List<Type> getAllMainTypes(); -->
<select id="getAllMainTypes" resultType="Type">
	select type_no as no, type_name as name, image_name as imageName
	from airbnb_types
	where main_type is null
	and privacy_type = 'N'
	order by no
</select>

<!-- List<Type> getAllSubTypes(int mainType); -->
<select id="getAllSubTypes" parameterType="int" resultType="Type">
	select type_no as no, type_name as name, image_name as imageName, type_description as description
	from airbnb_types
	where main_type = #{value}
	order by type_no
</select>

<!-- List<Type> getAllPrivacyTypes(); -->
<select id="getAllPrivacyTypes" resultType="Type">
	select type_no as no, type_name as name
	from airbnb_types
	where privacy_type = 'Y'
	order by type_no
</select>

<!-- Type getTypeByNo(int typeNo); -->
<select id="getTypeByNo" parameterType="int" resultType="Type">
	select *
	from airbnb_types
	where type_no = #{value}
</select>

<!-- void insertAcc(Accommodation acc); -->	
<insert id="insertAcc" parameterType="Accommodation">
	<selectKey keyProperty="accNo" resultType="int" order="BEFORE">
		select Accommodations_seq.nextval
		from dual
	</selectKey>
	insert into airbnb_accommodations
	(acc_no, user_no, acc_status)
	values
	(#{accNo}, #{user.no}, #{status})
</insert>

<!-- void insertAccType(AccType accType); -->
<insert id="insertAccType" parameterType="AccType">
	INSERT INTO airbnb_acc_types (acc_no, type_no)
	SELECT #{accNo}
	     , #{type.no}
	  FROM dual
	 WHERE NOT EXISTS (SELECT *
	                     FROM airbnb_acc_types
	                    WHERE type_no = #{type.no}
	                    and acc_no = #{accNo})
</insert>

<!-- void insertAccRoom(AccRoom accRoom); -->
<!-- 숙소 등록시 방을 여러개 입력받지 않는다. 1로 설정한다. -->
<insert id="insertAccRoom" parameterType="room">
	INSERT INTO airbnb_acc_rooms 
	(room_no, acc_no, room_bedroom, room_bed, room_bathroom)
	SELECT #{accNo}, #{accNo}, #{bedroom}, #{bed}, #{bathroom}
	  FROM dual
	 WHERE NOT EXISTS (SELECT *
	 					 FROM airbnb_acc_rooms
	 					WHERE acc_no = #{accNo})
</insert>

<!-- void updateGuestsByAccNo(Accommodation acc); -->
<update id="updateGuestsByAccNo" parameterType="Accommodation">
	update airbnb_accommodations
	set 
		acc_guest = #{guest}
	where acc_no = #{accNo}
</update>	

<!-- void insertAccConvenience(AccConvenience accConvenience); -->
<insert id="insertAccConvenience" parameterType="AccConvenience">
	insert into AIRBNB_ACC_CONVENIENCES
	(ACC_NO, CONVENIENCE_NO)
	values
	(#{accNo}, #{convenience.no})
</insert>

<!-- void updateAddressByAccNo(Accommodation acc); -->
<update id="updateAddressByAccNo" parameterType="Accommodation">
	update airbnb_accommodations
	set 
		acc_address = #{address},
		acc_latitude = #{latitude},
		acc_longitude = #{longitude}
	where acc_no = #{accNo}
</update>	
	
<!-- void updateImageCover(Accommodation acc); -->	
<update id="updateImageCover" parameterType="Accommodation">
	update airbnb_accommodations
	set 
		image_cover = #{imageCover}
	where acc_no = #{accNo}
</update>	
	
<!-- void insertAccPhotos(AccPhoto accPhoto); -->
<insert id="insertAccPhotos" parameterType="AccPhoto">
	<selectKey keyProperty="imageNo" resultType="int" order="BEFORE">
		select PHOTOS_SEQ.nextval
		from dual
	</selectKey>
	insert into airbnb_acc_photos
	(image_no, acc_no, image_name, image_cover)
	values
	(#{imageNo}, #{accNo}, #{name}, #{cover} )
</insert>

<!-- void updateAccName(Accommodation acc); -->
<update id="updateAccName" parameterType="Accommodation">
	update airbnb_accommodations
	set 
		acc_name = #{name}
	where acc_no = #{accNo}
</update>

<!-- List<Tag> getAllTags(); -->
<select id="getAllTags" resultType="Tag">
	select tag_id as id, tag_name as name, tag_icon as icon
	from airbnb_tags
	order by tag_id
</select>

<!-- void insertAccTags(AccTag accTag); -->
<insert id="insertAccTags" parameterType="AccTag">
	insert into airbnb_acc_tags
	(acc_no, tag_id)
	values
	(#{accNo}, #{tagId})
</insert>

<!-- void updateAccDescription(Accommodation acc); -->
<update id="updateAccDescription" parameterType="Accommodation">
	update airbnb_accommodations
	set 
		acc_description = #{description}
	where acc_no = #{accNo}
</update>

<!-- void updateAccPrice(Accommodation acc); -->
<update id="updateAccPrice" parameterType="Accommodation">
	update airbnb_accommodations
	set 
		acc_price = #{price}
	where acc_no = #{accNo}
</update>

<!-- void updateAcc(Accommodation acc); -->
<update id="updateAcc" parameterType="Accommodation">
	update airbnb_accommodations
	set 
		user_no = #{user.no},
		acc_review_score = #{reviewScore},
		acc_name = #{name},
		acc_description = #{description},
		acc_address = #{address},
		acc_latitude = #{latitude},
		acc_longitude = #{longitude},
		acc_price = #{price},
		acc_guest = #{guest},
		acc_pet = #{pet},
		acc_check_in = #{checkIn},
		acc_check_out = #{checkOut},
		acc_check_In_Type = #{checkInType},
		acc_status = #{status},
		acc_updated_Date = sysdate,
		acc_view_Count = #{viewCount},
		acc_min_day = #{minDay},
		acc_max_day = #{maxDay},
		acc_rent = #{rent},
		acc_traffic_description = #{trafficDescription},
		acc_refound_description = #{refoundDescription},
		acc_cleaning_price = #{cleaningPrice},
		image_cover = #{imageCover},			
		avg_total = #{totalScore},
		avg_cleanliness = #{cleanScore},
		avg_accuracy = #{accuracyScore},
		avg_communication = #{communicationScore},
		avg_location = #{locationScore},
		avg_checkin = #{checkinScore},
		avg_value = #{valueScore},
		avg_convenience = #{convenienceScore}
	where acc_no = #{accNo}
</update>

</mapper>